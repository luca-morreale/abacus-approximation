
iMinAd + 10000 0

limitx - iWidth 18
i + 0 0
_for < i limitx
    
    limity - iWidth 18
    j + 0 0
    _for < j limity
    # selected where start matrix

        iTmpAd + 0 0

        k + 0 0
        _for < k 16

            n + 0 0
            _for < n 16

                posx + i k
                posy + j n

                searchx + iTop k
                searchy + iLeft n

                t1 cast int input_searchx_searchy 
                t2 cast int input_posx_posy 
                t3 - t1 t2 
                t4 abs t3 t3

                iTmpAd + iTmpAd t4

            n + n 1
            _for
        
        k + k 1
        _for

        _if > iMinAd iTmpAd
            iMinAd + iTmpAd 0

            output_piMvPos + i 0 
            next + piMvPos 1
            output_next + j 0
        _if

    j + j 1
    _for

i + i 1
_for

# Result is returned through piMvPos (index of vector mv)
# mv is output